// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc199.OffseasonBot2016.subsystems;

import org.usfirst.frc199.OffseasonBot2016.DashboardInterface;
import org.usfirst.frc199.OffseasonBot2016.RobotMap;
import org.usfirst.frc199.OffseasonBot2016.commands.*;
import edu.wpi.first.wpilibj.Compressor;
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.Talon;

import edu.wpi.first.wpilibj.command.Subsystem;


/**
 *
 */
public class Intake extends Subsystem implements DashboardInterface{


    private final DigitalInput topHallEffect = RobotMap.intakeTopHallEffect;
    private final DigitalInput bottomHallEffect = RobotMap.intakeBottomHallEffect;
    private final Compressor compressor = RobotMap.intakeCompressor;
    private final DoubleSolenoid pivotPiston = RobotMap.intakePivotPiston;
    private final SpeedController intakeMotor = RobotMap.intakeIntakeMotor;
    private final DigitalInput intakenSensor = RobotMap.intakeIntakenSensor;

    

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    
    
    public void toggleIntake() {
    	if (topHallEffect.get() == false && bottomHallEffect.get() == true) {
    		pivotPiston.set(DoubleSolenoid.Value.kForward);
    		putBoolean("intakeUp", true);
    	} else if (topHallEffect.get() == true && bottomHallEffect.get() == false){
    		pivotPiston.set(DoubleSolenoid.Value.kReverse);
    		putBoolean("intakeUp", false);
    	} else if (topHallEffect.get() == true && bottomHallEffect.get() == true){
    		System.out.println("Not working, both hall effects are returning true.");
    	}
    }
    
    

    public void initDefaultCommand() {
    	
        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    public void displayData() {
    	putNumber("intakeMotor", intakeMotor.get());
    	putBoolean("intakenSensor", intakenSensor.get());
    	
    }

	public void loadIntake() {
		// TODO Auto-generated method stub
		intakeMotor.set(1);
	}



	public boolean getIntakenSensor() {
		// TODO Auto-generated method stub
		return intakenSensor.get();
	}



	public void unloadIntake() {
		// TODO Auto-generated method stub
		intakeMotor.set(-1);
	}

	public void setIntakeZero() {
		intakeMotor.set(0);
	}


	public void startCompressor() {
		// TODO Auto-generated method stub
		compressor.start();
	}
	
	public void setPivotPistonToZero() {
		pivotPiston.set(DoubleSolenoid.Value.kOff);
	}
}

